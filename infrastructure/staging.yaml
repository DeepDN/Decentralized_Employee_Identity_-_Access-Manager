AWSTemplateFormatVersion: '2010-09-09'
Description: 'Decentralized Employee Identity Manager - Staging Environment'

Parameters:
  Environment:
    Type: String
    Default: staging
    Description: Environment name
  
  PolygonRpcUrl:
    Type: String
    Description: Polygon RPC URL
    Default: https://rpc-mumbai.maticvigil.com
  
  PolygonPrivateKey:
    Type: String
    NoEcho: true
    Description: Polygon wallet private key
  
  VeramoKmsSecret:
    Type: String
    NoEcho: true
    Description: Veramo KMS secret key

Resources:
  # KMS Key for encryption
  EmployeeIdentityKMSKey:
    Type: AWS::KMS::Key
    Properties:
      Description: KMS Key for Employee Identity System
      KeyPolicy:
        Statement:
          - Sid: Enable IAM User Permissions
            Effect: Allow
            Principal:
              AWS: !Sub 'arn:aws:iam::${AWS::AccountId}:root'
            Action: 'kms:*'
            Resource: '*'
          - Sid: Allow Lambda Functions
            Effect: Allow
            Principal:
              AWS: 
                - !GetAtt DIDHandlerRole.Arn
                - !GetAtt CredentialHandlerRole.Arn
            Action:
              - kms:Encrypt
              - kms:Decrypt
              - kms:ReEncrypt*
              - kms:GenerateDataKey*
              - kms:DescribeKey
            Resource: '*'

  EmployeeIdentityKMSKeyAlias:
    Type: AWS::KMS::Alias
    Properties:
      AliasName: !Sub 'alias/employee-identity-${Environment}'
      TargetKeyId: !Ref EmployeeIdentityKMSKey

  # DynamoDB Tables
  EmployeesTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub 'employees-${Environment}'
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: employeeId
          AttributeType: S
      KeySchema:
        - AttributeName: employeeId
          KeyType: HASH
      StreamSpecification:
        StreamViewType: NEW_AND_OLD_IMAGES
      PointInTimeRecoverySpecification:
        PointInTimeRecoveryEnabled: true
      SSESpecification:
        SSEEnabled: true
        KMSMasterKeyId: !Ref EmployeeIdentityKMSKey
      Tags:
        - Key: Environment
          Value: !Ref Environment
        - Key: Application
          Value: EmployeeIdentity

  CredentialsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub 'credentials-${Environment}'
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: credentialId
          AttributeType: S
        - AttributeName: employeeId
          AttributeType: S
        - AttributeName: issuanceDate
          AttributeType: S
      KeySchema:
        - AttributeName: credentialId
          KeyType: HASH
      GlobalSecondaryIndexes:
        - IndexName: EmployeeIdIndex
          KeySchema:
            - AttributeName: employeeId
              KeyType: HASH
            - AttributeName: issuanceDate
              KeyType: RANGE
          Projection:
            ProjectionType: ALL
      StreamSpecification:
        StreamViewType: NEW_AND_OLD_IMAGES
      PointInTimeRecoverySpecification:
        PointInTimeRecoveryEnabled: true
      SSESpecification:
        SSEEnabled: true
        KMSMasterKeyId: !Ref EmployeeIdentityKMSKey
      Tags:
        - Key: Environment
          Value: !Ref Environment
        - Key: Application
          Value: EmployeeIdentity

  AccessLogsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub 'access-logs-${Environment}'
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: logId
          AttributeType: S
        - AttributeName: employeeId
          AttributeType: S
        - AttributeName: timestamp
          AttributeType: S
      KeySchema:
        - AttributeName: logId
          KeyType: HASH
      GlobalSecondaryIndexes:
        - IndexName: EmployeeIdTimestampIndex
          KeySchema:
            - AttributeName: employeeId
              KeyType: HASH
            - AttributeName: timestamp
              KeyType: RANGE
          Projection:
            ProjectionType: ALL
      TimeToLiveSpecification:
        AttributeName: ttl
        Enabled: true
      SSESpecification:
        SSEEnabled: true
        KMSMasterKeyId: !Ref EmployeeIdentityKMSKey
      Tags:
        - Key: Environment
          Value: !Ref Environment
        - Key: Application
          Value: EmployeeIdentity

  DIDsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub 'dids-${Environment}'
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: did
          AttributeType: S
      KeySchema:
        - AttributeName: did
          KeyType: HASH
      SSESpecification:
        SSEEnabled: true
        KMSMasterKeyId: !Ref EmployeeIdentityKMSKey
      Tags:
        - Key: Environment
          Value: !Ref Environment
        - Key: Application
          Value: EmployeeIdentity

  # S3 Bucket for storing documents and QR codes
  EmployeeIdentityBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub 'employee-identity-${Environment}-${AWS::AccountId}'
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: aws:kms
              KMSMasterKeyID: !Ref EmployeeIdentityKMSKey
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      VersioningConfiguration:
        Status: Enabled
      LifecycleConfiguration:
        Rules:
          - Id: DeleteOldVersions
            Status: Enabled
            NoncurrentVersionExpirationInDays: 30
      Tags:
        - Key: Environment
          Value: !Ref Environment
        - Key: Application
          Value: EmployeeIdentity

  # Lambda Execution Roles
  DIDHandlerRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: DIDHandlerPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:GetItem
                  - dynamodb:PutItem
                  - dynamodb:UpdateItem
                  - dynamodb:DeleteItem
                  - dynamodb:Query
                  - dynamodb:Scan
                Resource:
                  - !GetAtt EmployeesTable.Arn
                  - !GetAtt DIDsTable.Arn
              - Effect: Allow
                Action:
                  - kms:Encrypt
                  - kms:Decrypt
                  - kms:ReEncrypt*
                  - kms:GenerateDataKey*
                  - kms:DescribeKey
                Resource: !GetAtt EmployeeIdentityKMSKey.Arn

  CredentialHandlerRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: CredentialHandlerPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:GetItem
                  - dynamodb:PutItem
                  - dynamodb:UpdateItem
                  - dynamodb:DeleteItem
                  - dynamodb:Query
                  - dynamodb:Scan
                Resource:
                  - !GetAtt CredentialsTable.Arn
                  - !GetAtt CredentialsTable.Arn/index/*
                  - !GetAtt EmployeesTable.Arn
                  - !GetAtt AccessLogsTable.Arn
                  - !GetAtt AccessLogsTable.Arn/index/*
              - Effect: Allow
                Action:
                  - kms:Encrypt
                  - kms:Decrypt
                  - kms:ReEncrypt*
                  - kms:GenerateDataKey*
                  - kms:DescribeKey
                Resource: !GetAtt EmployeeIdentityKMSKey.Arn

  # Lambda Functions
  DIDHandlerFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub 'employee-identity-did-handler-${Environment}'
      Runtime: nodejs18.x
      Handler: didHandler.handler
      Code:
        ZipFile: |
          exports.handler = async (event) => {
            return {
              statusCode: 200,
              body: JSON.stringify({ message: 'DID Handler placeholder' })
            };
          };
      Role: !GetAtt DIDHandlerRole.Arn
      Timeout: 30
      MemorySize: 512
      Environment:
        Variables:
          ENVIRONMENT: !Ref Environment
          DYNAMODB_EMPLOYEES_TABLE: !Ref EmployeesTable
          DYNAMODB_DIDS_TABLE: !Ref DIDsTable
          KMS_KEY_ID: !Ref EmployeeIdentityKMSKey
          POLYGON_RPC_URL: !Ref PolygonRpcUrl
          POLYGON_PRIVATE_KEY: !Ref PolygonPrivateKey
          VERAMO_KMS_SECRET_KEY: !Ref VeramoKmsSecret
      Tags:
        - Key: Environment
          Value: !Ref Environment
        - Key: Application
          Value: EmployeeIdentity

  CredentialHandlerFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub 'employee-identity-credential-handler-${Environment}'
      Runtime: nodejs18.x
      Handler: credentialHandler.handler
      Code:
        ZipFile: |
          exports.handler = async (event) => {
            return {
              statusCode: 200,
              body: JSON.stringify({ message: 'Credential Handler placeholder' })
            };
          };
      Role: !GetAtt CredentialHandlerRole.Arn
      Timeout: 30
      MemorySize: 512
      Environment:
        Variables:
          ENVIRONMENT: !Ref Environment
          DYNAMODB_CREDENTIALS_TABLE: !Ref CredentialsTable
          DYNAMODB_EMPLOYEES_TABLE: !Ref EmployeesTable
          DYNAMODB_ACCESS_LOGS_TABLE: !Ref AccessLogsTable
          KMS_KEY_ID: !Ref EmployeeIdentityKMSKey
          POLYGON_RPC_URL: !Ref PolygonRpcUrl
          POLYGON_PRIVATE_KEY: !Ref PolygonPrivateKey
          VERAMO_KMS_SECRET_KEY: !Ref VeramoKmsSecret
      Tags:
        - Key: Environment
          Value: !Ref Environment
        - Key: Application
          Value: EmployeeIdentity

  # API Gateway
  EmployeeIdentityAPI:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: !Sub 'employee-identity-api-${Environment}'
      Description: API for Employee Identity Management System
      EndpointConfiguration:
        Types:
          - REGIONAL

  # Cognito User Pool for Admin Authentication
  AdminUserPool:
    Type: AWS::Cognito::UserPool
    Properties:
      UserPoolName: !Sub 'employee-identity-admins-${Environment}'
      Policies:
        PasswordPolicy:
          MinimumLength: 8
          RequireUppercase: true
          RequireLowercase: true
          RequireNumbers: true
          RequireSymbols: true
      MfaConfiguration: OPTIONAL
      EnabledMfas:
        - SOFTWARE_TOKEN_MFA
      Schema:
        - Name: email
          AttributeDataType: String
          Required: true
          Mutable: true
        - Name: name
          AttributeDataType: String
          Required: true
          Mutable: true
      AutoVerifiedAttributes:
        - email
      Tags:
        Environment: !Ref Environment
        Application: EmployeeIdentity

  AdminUserPoolClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      UserPoolId: !Ref AdminUserPool
      ClientName: !Sub 'employee-identity-admin-client-${Environment}'
      GenerateSecret: false
      ExplicitAuthFlows:
        - ADMIN_NO_SRP_AUTH
        - USER_PASSWORD_AUTH
      SupportedIdentityProviders:
        - COGNITO

Outputs:
  EmployeesTableName:
    Description: Name of the Employees DynamoDB table
    Value: !Ref EmployeesTable
    Export:
      Name: !Sub '${AWS::StackName}-EmployeesTable'

  CredentialsTableName:
    Description: Name of the Credentials DynamoDB table
    Value: !Ref CredentialsTable
    Export:
      Name: !Sub '${AWS::StackName}-CredentialsTable'

  AccessLogsTableName:
    Description: Name of the Access Logs DynamoDB table
    Value: !Ref AccessLogsTable
    Export:
      Name: !Sub '${AWS::StackName}-AccessLogsTable'

  S3BucketName:
    Description: Name of the S3 bucket
    Value: !Ref EmployeeIdentityBucket
    Export:
      Name: !Sub '${AWS::StackName}-S3Bucket'

  KMSKeyId:
    Description: KMS Key ID for encryption
    Value: !Ref EmployeeIdentityKMSKey
    Export:
      Name: !Sub '${AWS::StackName}-KMSKey'

  DIDHandlerFunctionArn:
    Description: ARN of the DID Handler Lambda function
    Value: !GetAtt DIDHandlerFunction.Arn
    Export:
      Name: !Sub '${AWS::StackName}-DIDHandlerFunction'

  CredentialHandlerFunctionArn:
    Description: ARN of the Credential Handler Lambda function
    Value: !GetAtt CredentialHandlerFunction.Arn
    Export:
      Name: !Sub '${AWS::StackName}-CredentialHandlerFunction'

  UserPoolId:
    Description: Cognito User Pool ID
    Value: !Ref AdminUserPool
    Export:
      Name: !Sub '${AWS::StackName}-UserPoolId'

  UserPoolClientId:
    Description: Cognito User Pool Client ID
    Value: !Ref AdminUserPoolClient
    Export:
      Name: !Sub '${AWS::StackName}-UserPoolClientId'
